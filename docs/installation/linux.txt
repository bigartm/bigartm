Installation for Linux and Mac OS-X users
=========================================


BigARTM had been tested on several Linux and MAC distributions, and it is known to work well on

* Ubuntu 16.04.1
* Linux Mint 18
* Ubuntu 14.04.5
* Linux Mint 17.3
* Arch Linux
* Manjaro
* Fedora 24
* openSUSE Leap 42.1

To install BigARTM you should build it from source code.
Or, you may run BigARTM from pre-built docker container, as described in :doc:`docker`.
If you are looking for old instructions, refer to :doc:`/devguide/dev_build_linux`.

Script to install BigARTM on Ubuntu
-----------------------------------

The following script is tested with Ubuntu 14.04.
Scroll further below for more OS-specific insructinos.

.. code-block:: bash

    # Step 1. Update and install dependencies
    apt-get --yes update
    apt-get --yes install git
    apt-get --yes install make
    apt-get --yes install cmake
    apt-get --yes install build-essential
    apt-get --yes install libboost-all-dev

    # Step 2. Insall python packages
    apt-get --yes install python-numpy
    apt-get --yes install python-pandas
    wget https://bootstrap.pypa.io/get-pip.py
    python get-pip.py
    pip install protobuf
    pip install tqdm

    # Step 3. Clone repository and build
    git clone --branch=stable https://github.com/bigartm/bigartm.git
    cd bigartm
    mkdir build && cd build
    cmake ..
    make -j20

    # Step 4. Install BigARTM
    make install
    export ARTM_SHARED_LIBRARY=/usr/local/lib/libartm.so

Now you should be able to use BigARTM command line utility (try ``bigartm --help``),
or run BigARTM from python, like this: ``import artm; print(artm.version()); print(artm.ARTM(num_topics=10).info)``.

Step 1. Install system dependencies
-----------------------------------

**Ubuntu, Linux Mint:**

.. code-block:: bash

   sudo apt-get install git build-essential libboost-all-dev
   sudo apt-get install cmake  # For Ubuntu 16.04 and Linux Mint 18

For Ubuntu 14.04 and Linux Mint 17.3 ubstakk cmake from PPA:

.. code-block:: bash

   sudo add-apt-repository ppa:george-edison55/cmake-3.x
   sudo apt-get update && sudo apt-get install cmake

**Arch Linux, Manjaro**

Ensure that Python and base-devel packages are installed,
and current user has root priveledges (e.g. can run sudo):

.. code-block:: bash

   sudo pacman -S git boost cmake

**Fedora**

.. code-block:: bash

   sudo dnf install gcc-c++ glibc-static libstdc++-static
   sudo dnf install git boost boost-static cmake

**openSUSE:**

.. code-block:: bash

   sudo zypper install gcc gcc-c++ glibc-devel-static git cmake

Currently openSUSE require to install Boost from sources:

.. code-block:: bash

   sudo zypper install libbz2-devel python-devel
   wget http://sourceforge.net/projects/boost/files/boost/1.60.0/boost_1_60_0.tar.gz
   tar -xf boost_1_60_0.tar.gz
   cd boost_1_60_0
   ./bootstrap.sh
   ./b2 link=static,shared cxxflags="-std=c++11 -fPIC"
   sudo ./b2 install

**Mac OS distributions** 

.. code-block:: bash

   brew install git cmake boost

Step 2. Python packages
----------------------------------------------------------------
BigARTM require Python packages ``numpy``, ``pandas``, ``protobuf`` and ``tqdm``.
We recommend to install them with recent versino of ``pip``.

If ``pip`` is not available, install system package ``python-pip`` or ``python3-pip``
depending on your prefered Python version.
For Arch Linux and Manjaro use ``python2-pip`` and ``python-pip``.

Verify that you use latest version of ``pip``:

.. code-block:: bash

   sudo pip2 install -U pip  # Python 2
   sudo pip3 install -U pip  # Python 3

Then install required python packages:

.. code-block:: bash

   sudo pip2 install -U numpy pandas protobuf==3.0.0 tqdm # Python 2
   sudo pip3 install -U numpy pandas protobuf==3.0.0 tqdm # Python 3

Step 3. Build and install BigARTM library
-----------------------------------------

.. code-block:: bash

   git clone --branch=stable https://github.com/bigartm/bigartm.git
   cd bigartm && mkdir build && cd build

Next step is to run ``cmake``. The following options are available.

* ``-DPYTHON=python3`` - to use Python 3 instead of Python 2;
* ``-DCMAKE_INSTALL_PREFIX=xxx`` - for custom install location instead of default ``/usr/local``;
* ``-DBoost_USE_STATIC_LIBS=ON`` â€” required on openSUSE.

Example:

.. code-block:: bash

   cmake -DPYTHON=python3 -DCMAKE_INSTALL_PREFIX=/opt/bigartm ..

Now build and install the library:

.. code-block:: bash

   make -j20
   sudo make install

Step 4. Register ``libartm.so`` / ``libartm.dylib``
---------------------------------------------------

Register shared library ``libartm.so`` (or ``libartm.dylib``):

.. code-block:: bash

   echo /usr/local/lib | sudo tee /etc/ld.so.conf.d/artm.conf
   sudo ldconfig

If you've installed to another location than ``/usr/local``
update the first command with new path.

As an alternative you may set up ``ARTM_SHARED_LIBRARY`` system variable

.. code-block:: bash

   export ARTM_SHARED_LIBRARY=/usr/local/lib/libartm.so     # Linux / Unix
   export ARTM_SHARED_LIBRARY=/usr/local/lib/libartm.dylib  # Mac

Step 5. Enjoy!!!
----------------
   
If the instructions above did not work for you please let us know,
either create an `issue <https://github.com/bigartm/bigartm/issues/new>`_
or send e-mail to `bigartm-users@googlegroups.com <https://groups.google.com/group/bigartm-users>`_.

.. vim:ft=rst
