// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: artm/core/internals.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "artm/core/internals.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace artm {
namespace core {

namespace {

const ::google::protobuf::Descriptor* DataLoaderCacheEntry_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DataLoaderCacheEntry_reflection_ = NULL;
const ::google::protobuf::Descriptor* Item_v07_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Item_v07_reflection_ = NULL;
const ::google::protobuf::Descriptor* Field_v07_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Field_v07_reflection_ = NULL;
const ::google::protobuf::Descriptor* Batch_v07_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Batch_v07_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_artm_2fcore_2finternals_2eproto() {
  protobuf_AddDesc_artm_2fcore_2finternals_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "artm/core/internals.proto");
  GOOGLE_CHECK(file != NULL);
  DataLoaderCacheEntry_descriptor_ = file->message_type(0);
  static const int DataLoaderCacheEntry_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataLoaderCacheEntry, batch_uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataLoaderCacheEntry, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataLoaderCacheEntry, theta_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataLoaderCacheEntry, topic_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataLoaderCacheEntry, filename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataLoaderCacheEntry, item_title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataLoaderCacheEntry, topic_index_),
  };
  DataLoaderCacheEntry_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DataLoaderCacheEntry_descriptor_,
      DataLoaderCacheEntry::default_instance_,
      DataLoaderCacheEntry_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataLoaderCacheEntry, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataLoaderCacheEntry, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DataLoaderCacheEntry));
  Item_v07_descriptor_ = file->message_type(1);
  static const int Item_v07_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item_v07, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item_v07, field_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item_v07, title_),
  };
  Item_v07_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Item_v07_descriptor_,
      Item_v07::default_instance_,
      Item_v07_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item_v07, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item_v07, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Item_v07));
  Field_v07_descriptor_ = file->message_type(2);
  static const int Field_v07_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Field_v07, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Field_v07, token_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Field_v07, token_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Field_v07, token_offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Field_v07, string_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Field_v07, int_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Field_v07, double_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Field_v07, date_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Field_v07, string_array_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Field_v07, int_array_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Field_v07, double_array_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Field_v07, date_array_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Field_v07, token_weight_),
  };
  Field_v07_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Field_v07_descriptor_,
      Field_v07::default_instance_,
      Field_v07_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Field_v07, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Field_v07, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Field_v07));
  Batch_v07_descriptor_ = file->message_type(3);
  static const int Batch_v07_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Batch_v07, token_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Batch_v07, class_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Batch_v07, item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Batch_v07, description_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Batch_v07, id_),
  };
  Batch_v07_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Batch_v07_descriptor_,
      Batch_v07::default_instance_,
      Batch_v07_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Batch_v07, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Batch_v07, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Batch_v07));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_artm_2fcore_2finternals_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DataLoaderCacheEntry_descriptor_, &DataLoaderCacheEntry::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Item_v07_descriptor_, &Item_v07::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Field_v07_descriptor_, &Field_v07::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Batch_v07_descriptor_, &Batch_v07::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_artm_2fcore_2finternals_2eproto() {
  delete DataLoaderCacheEntry::default_instance_;
  delete DataLoaderCacheEntry_reflection_;
  delete Item_v07::default_instance_;
  delete Item_v07_reflection_;
  delete Field_v07::default_instance_;
  delete Field_v07_reflection_;
  delete Field_v07::_default_name_;
  delete Batch_v07::default_instance_;
  delete Batch_v07_reflection_;
}

void protobuf_AddDesc_artm_2fcore_2finternals_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::artm::protobuf_AddDesc_artm_2fmessages_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\031artm/core/internals.proto\022\tartm.core\032\023"
    "artm/messages.proto\"\273\001\n\024DataLoaderCacheE"
    "ntry\022\022\n\nbatch_uuid\030\002 \001(\t\022\017\n\007item_id\030\003 \003("
    "\005\022\037\n\005theta\030\004 \003(\0132\020.artm.FloatArray\022\022\n\nto"
    "pic_name\030\005 \003(\t\022\020\n\010filename\030\006 \001(\t\022\022\n\nitem"
    "_title\030\007 \003(\t\022#\n\013topic_index\030\010 \003(\0132\016.artm"
    ".IntArray\"J\n\010Item_v07\022\n\n\002id\030\001 \001(\005\022#\n\005fie"
    "ld\030\002 \003(\0132\024.artm.core.Field_v07\022\r\n\005title\030"
    "\003 \001(\t\"\231\002\n\tField_v07\022\023\n\004name\030\001 \001(\t:\005@body"
    "\022\020\n\010token_id\030\002 \003(\005\022\023\n\013token_count\030\003 \003(\005\022"
    "\024\n\014token_offset\030\004 \003(\005\022\024\n\014string_value\030\005 "
    "\001(\t\022\021\n\tint_value\030\006 \001(\003\022\024\n\014double_value\030\007"
    " \001(\001\022\022\n\ndate_value\030\010 \001(\t\022\024\n\014string_array"
    "\030\020 \003(\t\022\021\n\tint_array\030\021 \003(\003\022\024\n\014double_arra"
    "y\030\022 \003(\001\022\022\n\ndate_array\030\023 \003(\t\022\024\n\014token_wei"
    "ght\030\024 \003(\002\"p\n\tBatch_v07\022\r\n\005token\030\001 \003(\t\022\020\n"
    "\010class_id\030\002 \003(\t\022!\n\004item\030\003 \003(\0132\023.artm.cor"
    "e.Item_v07\022\023\n\013description\030\004 \001(\t\022\n\n\002id\030\005 "
    "\001(\t", 723);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "artm/core/internals.proto", &protobuf_RegisterTypes);
  DataLoaderCacheEntry::default_instance_ = new DataLoaderCacheEntry();
  Item_v07::default_instance_ = new Item_v07();
  Field_v07::_default_name_ =
      new ::std::string("@body", 5);
  Field_v07::default_instance_ = new Field_v07();
  Batch_v07::default_instance_ = new Batch_v07();
  DataLoaderCacheEntry::default_instance_->InitAsDefaultInstance();
  Item_v07::default_instance_->InitAsDefaultInstance();
  Field_v07::default_instance_->InitAsDefaultInstance();
  Batch_v07::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_artm_2fcore_2finternals_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_artm_2fcore_2finternals_2eproto {
  StaticDescriptorInitializer_artm_2fcore_2finternals_2eproto() {
    protobuf_AddDesc_artm_2fcore_2finternals_2eproto();
  }
} static_descriptor_initializer_artm_2fcore_2finternals_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int DataLoaderCacheEntry::kBatchUuidFieldNumber;
const int DataLoaderCacheEntry::kItemIdFieldNumber;
const int DataLoaderCacheEntry::kThetaFieldNumber;
const int DataLoaderCacheEntry::kTopicNameFieldNumber;
const int DataLoaderCacheEntry::kFilenameFieldNumber;
const int DataLoaderCacheEntry::kItemTitleFieldNumber;
const int DataLoaderCacheEntry::kTopicIndexFieldNumber;
#endif  // !_MSC_VER

DataLoaderCacheEntry::DataLoaderCacheEntry()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DataLoaderCacheEntry::InitAsDefaultInstance() {
}

DataLoaderCacheEntry::DataLoaderCacheEntry(const DataLoaderCacheEntry& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DataLoaderCacheEntry::SharedCtor() {
  _cached_size_ = 0;
  batch_uuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyString());
  filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyString());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DataLoaderCacheEntry::~DataLoaderCacheEntry() {
  SharedDtor();
}

void DataLoaderCacheEntry::SharedDtor() {
  if (batch_uuid_ != &::google::protobuf::internal::GetEmptyString()) {
    delete batch_uuid_;
  }
  if (filename_ != &::google::protobuf::internal::GetEmptyString()) {
    delete filename_;
  }
  if (this != default_instance_) {
  }
}

void DataLoaderCacheEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataLoaderCacheEntry::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DataLoaderCacheEntry_descriptor_;
}

const DataLoaderCacheEntry& DataLoaderCacheEntry::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_artm_2fcore_2finternals_2eproto();
  return *default_instance_;
}

DataLoaderCacheEntry* DataLoaderCacheEntry::default_instance_ = NULL;

DataLoaderCacheEntry* DataLoaderCacheEntry::New() const {
  return new DataLoaderCacheEntry;
}

void DataLoaderCacheEntry::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_batch_uuid()) {
      if (batch_uuid_ != &::google::protobuf::internal::GetEmptyString()) {
        batch_uuid_->clear();
      }
    }
    if (has_filename()) {
      if (filename_ != &::google::protobuf::internal::GetEmptyString()) {
        filename_->clear();
      }
    }
  }
  item_id_.Clear();
  theta_.Clear();
  topic_name_.Clear();
  item_title_.Clear();
  topic_index_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DataLoaderCacheEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string batch_uuid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_batch_uuid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->batch_uuid().data(), this->batch_uuid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_item_id;
        break;
      }

      // repeated int32 item_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_item_id())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_item_id())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_item_id;
        if (input->ExpectTag(34)) goto parse_theta;
        break;
      }

      // repeated .artm.FloatArray theta = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_theta:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_theta()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_theta;
        if (input->ExpectTag(42)) goto parse_topic_name;
        break;
      }

      // repeated string topic_name = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_topic_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_topic_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->topic_name(this->topic_name_size() - 1).data(),
            this->topic_name(this->topic_name_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_topic_name;
        if (input->ExpectTag(50)) goto parse_filename;
        break;
      }

      // optional string filename = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_filename:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->filename().data(), this->filename().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_item_title;
        break;
      }

      // repeated string item_title = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_item_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->item_title(this->item_title_size() - 1).data(),
            this->item_title(this->item_title_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_item_title;
        if (input->ExpectTag(66)) goto parse_topic_index;
        break;
      }

      // repeated .artm.IntArray topic_index = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_topic_index:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_topic_index()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_topic_index;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DataLoaderCacheEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string batch_uuid = 2;
  if (has_batch_uuid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->batch_uuid().data(), this->batch_uuid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->batch_uuid(), output);
  }

  // repeated int32 item_id = 3;
  for (int i = 0; i < this->item_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->item_id(i), output);
  }

  // repeated .artm.FloatArray theta = 4;
  for (int i = 0; i < this->theta_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->theta(i), output);
  }

  // repeated string topic_name = 5;
  for (int i = 0; i < this->topic_name_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->topic_name(i).data(), this->topic_name(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->topic_name(i), output);
  }

  // optional string filename = 6;
  if (has_filename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->filename(), output);
  }

  // repeated string item_title = 7;
  for (int i = 0; i < this->item_title_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->item_title(i).data(), this->item_title(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->item_title(i), output);
  }

  // repeated .artm.IntArray topic_index = 8;
  for (int i = 0; i < this->topic_index_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->topic_index(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DataLoaderCacheEntry::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string batch_uuid = 2;
  if (has_batch_uuid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->batch_uuid().data(), this->batch_uuid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->batch_uuid(), target);
  }

  // repeated int32 item_id = 3;
  for (int i = 0; i < this->item_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->item_id(i), target);
  }

  // repeated .artm.FloatArray theta = 4;
  for (int i = 0; i < this->theta_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->theta(i), target);
  }

  // repeated string topic_name = 5;
  for (int i = 0; i < this->topic_name_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->topic_name(i).data(), this->topic_name(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->topic_name(i), target);
  }

  // optional string filename = 6;
  if (has_filename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->filename(), target);
  }

  // repeated string item_title = 7;
  for (int i = 0; i < this->item_title_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->item_title(i).data(), this->item_title(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->item_title(i), target);
  }

  // repeated .artm.IntArray topic_index = 8;
  for (int i = 0; i < this->topic_index_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->topic_index(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DataLoaderCacheEntry::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string batch_uuid = 2;
    if (has_batch_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->batch_uuid());
    }

    // optional string filename = 6;
    if (has_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
    }

  }
  // repeated int32 item_id = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->item_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->item_id(i));
    }
    total_size += 1 * this->item_id_size() + data_size;
  }

  // repeated .artm.FloatArray theta = 4;
  total_size += 1 * this->theta_size();
  for (int i = 0; i < this->theta_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->theta(i));
  }

  // repeated string topic_name = 5;
  total_size += 1 * this->topic_name_size();
  for (int i = 0; i < this->topic_name_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->topic_name(i));
  }

  // repeated string item_title = 7;
  total_size += 1 * this->item_title_size();
  for (int i = 0; i < this->item_title_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->item_title(i));
  }

  // repeated .artm.IntArray topic_index = 8;
  total_size += 1 * this->topic_index_size();
  for (int i = 0; i < this->topic_index_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->topic_index(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataLoaderCacheEntry::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DataLoaderCacheEntry* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DataLoaderCacheEntry*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DataLoaderCacheEntry::MergeFrom(const DataLoaderCacheEntry& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_id_.MergeFrom(from.item_id_);
  theta_.MergeFrom(from.theta_);
  topic_name_.MergeFrom(from.topic_name_);
  item_title_.MergeFrom(from.item_title_);
  topic_index_.MergeFrom(from.topic_index_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_batch_uuid()) {
      set_batch_uuid(from.batch_uuid());
    }
    if (from.has_filename()) {
      set_filename(from.filename());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DataLoaderCacheEntry::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataLoaderCacheEntry::CopyFrom(const DataLoaderCacheEntry& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataLoaderCacheEntry::IsInitialized() const {

  return true;
}

void DataLoaderCacheEntry::Swap(DataLoaderCacheEntry* other) {
  if (other != this) {
    std::swap(batch_uuid_, other->batch_uuid_);
    item_id_.Swap(&other->item_id_);
    theta_.Swap(&other->theta_);
    topic_name_.Swap(&other->topic_name_);
    std::swap(filename_, other->filename_);
    item_title_.Swap(&other->item_title_);
    topic_index_.Swap(&other->topic_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DataLoaderCacheEntry::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DataLoaderCacheEntry_descriptor_;
  metadata.reflection = DataLoaderCacheEntry_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Item_v07::kIdFieldNumber;
const int Item_v07::kFieldFieldNumber;
const int Item_v07::kTitleFieldNumber;
#endif  // !_MSC_VER

Item_v07::Item_v07()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Item_v07::InitAsDefaultInstance() {
}

Item_v07::Item_v07(const Item_v07& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Item_v07::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyString());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Item_v07::~Item_v07() {
  SharedDtor();
}

void Item_v07::SharedDtor() {
  if (title_ != &::google::protobuf::internal::GetEmptyString()) {
    delete title_;
  }
  if (this != default_instance_) {
  }
}

void Item_v07::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Item_v07::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Item_v07_descriptor_;
}

const Item_v07& Item_v07::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_artm_2fcore_2finternals_2eproto();
  return *default_instance_;
}

Item_v07* Item_v07::default_instance_ = NULL;

Item_v07* Item_v07::New() const {
  return new Item_v07;
}

void Item_v07::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    if (has_title()) {
      if (title_ != &::google::protobuf::internal::GetEmptyString()) {
        title_->clear();
      }
    }
  }
  field_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Item_v07::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_field;
        break;
      }

      // repeated .artm.core.Field_v07 field = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_field:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_field()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_field;
        if (input->ExpectTag(26)) goto parse_title;
        break;
      }

      // optional string title = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Item_v07::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // repeated .artm.core.Field_v07 field = 2;
  for (int i = 0; i < this->field_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->field(i), output);
  }

  // optional string title = 3;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->title(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Item_v07::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // repeated .artm.core.Field_v07 field = 2;
  for (int i = 0; i < this->field_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->field(i), target);
  }

  // optional string title = 3;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->title(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Item_v07::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional string title = 3;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

  }
  // repeated .artm.core.Field_v07 field = 2;
  total_size += 1 * this->field_size();
  for (int i = 0; i < this->field_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->field(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Item_v07::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Item_v07* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Item_v07*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Item_v07::MergeFrom(const Item_v07& from) {
  GOOGLE_CHECK_NE(&from, this);
  field_.MergeFrom(from.field_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_title()) {
      set_title(from.title());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Item_v07::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Item_v07::CopyFrom(const Item_v07& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Item_v07::IsInitialized() const {

  return true;
}

void Item_v07::Swap(Item_v07* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    field_.Swap(&other->field_);
    std::swap(title_, other->title_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Item_v07::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Item_v07_descriptor_;
  metadata.reflection = Item_v07_reflection_;
  return metadata;
}


// ===================================================================

::std::string* Field_v07::_default_name_ = NULL;
#ifndef _MSC_VER
const int Field_v07::kNameFieldNumber;
const int Field_v07::kTokenIdFieldNumber;
const int Field_v07::kTokenCountFieldNumber;
const int Field_v07::kTokenOffsetFieldNumber;
const int Field_v07::kStringValueFieldNumber;
const int Field_v07::kIntValueFieldNumber;
const int Field_v07::kDoubleValueFieldNumber;
const int Field_v07::kDateValueFieldNumber;
const int Field_v07::kStringArrayFieldNumber;
const int Field_v07::kIntArrayFieldNumber;
const int Field_v07::kDoubleArrayFieldNumber;
const int Field_v07::kDateArrayFieldNumber;
const int Field_v07::kTokenWeightFieldNumber;
#endif  // !_MSC_VER

Field_v07::Field_v07()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Field_v07::InitAsDefaultInstance() {
}

Field_v07::Field_v07(const Field_v07& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Field_v07::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(_default_name_);
  string_value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyString());
  int_value_ = GOOGLE_LONGLONG(0);
  double_value_ = 0;
  date_value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyString());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Field_v07::~Field_v07() {
  SharedDtor();
}

void Field_v07::SharedDtor() {
  if (name_ != _default_name_) {
    delete name_;
  }
  if (string_value_ != &::google::protobuf::internal::GetEmptyString()) {
    delete string_value_;
  }
  if (date_value_ != &::google::protobuf::internal::GetEmptyString()) {
    delete date_value_;
  }
  if (this != default_instance_) {
  }
}

void Field_v07::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Field_v07::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Field_v07_descriptor_;
}

const Field_v07& Field_v07::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_artm_2fcore_2finternals_2eproto();
  return *default_instance_;
}

Field_v07* Field_v07::default_instance_ = NULL;

Field_v07* Field_v07::New() const {
  return new Field_v07;
}

void Field_v07::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != _default_name_) {
        name_->assign(*_default_name_);
      }
    }
    if (has_string_value()) {
      if (string_value_ != &::google::protobuf::internal::GetEmptyString()) {
        string_value_->clear();
      }
    }
    int_value_ = GOOGLE_LONGLONG(0);
    double_value_ = 0;
    if (has_date_value()) {
      if (date_value_ != &::google::protobuf::internal::GetEmptyString()) {
        date_value_->clear();
      }
    }
  }
  token_id_.Clear();
  token_count_.Clear();
  token_offset_.Clear();
  string_array_.Clear();
  int_array_.Clear();
  double_array_.Clear();
  date_array_.Clear();
  token_weight_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Field_v07::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1 [default = "@body"];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_token_id;
        break;
      }

      // repeated int32 token_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_token_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_token_id())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_token_id())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_token_id;
        if (input->ExpectTag(24)) goto parse_token_count;
        break;
      }

      // repeated int32 token_count = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_token_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_token_count())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_token_count())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_token_count;
        if (input->ExpectTag(32)) goto parse_token_offset;
        break;
      }

      // repeated int32 token_offset = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_token_offset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_token_offset())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_token_offset())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_token_offset;
        if (input->ExpectTag(42)) goto parse_string_value;
        break;
      }

      // optional string string_value = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_string_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->string_value().data(), this->string_value().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_int_value;
        break;
      }

      // optional int64 int_value = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_int_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &int_value_)));
          set_has_int_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(57)) goto parse_double_value;
        break;
      }

      // optional double double_value = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_double_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &double_value_)));
          set_has_double_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_date_value;
        break;
      }

      // optional string date_value = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_date_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_date_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->date_value().data(), this->date_value().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_string_array;
        break;
      }

      // repeated string string_array = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_string_array:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_string_array()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->string_array(this->string_array_size() - 1).data(),
            this->string_array(this->string_array_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_string_array;
        if (input->ExpectTag(136)) goto parse_int_array;
        break;
      }

      // repeated int64 int_array = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_int_array:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 2, 136, input, this->mutable_int_array())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_int_array())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(136)) goto parse_int_array;
        if (input->ExpectTag(145)) goto parse_double_array;
        break;
      }

      // repeated double double_array = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_double_array:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 2, 145, input, this->mutable_double_array())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_double_array())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(145)) goto parse_double_array;
        if (input->ExpectTag(154)) goto parse_date_array;
        break;
      }

      // repeated string date_array = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_date_array:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_date_array()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->date_array(this->date_array_size() - 1).data(),
            this->date_array(this->date_array_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_date_array;
        if (input->ExpectTag(165)) goto parse_token_weight;
        break;
      }

      // repeated float token_weight = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_token_weight:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 2, 165, input, this->mutable_token_weight())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_token_weight())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(165)) goto parse_token_weight;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Field_v07::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string name = 1 [default = "@body"];
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }

  // repeated int32 token_id = 2;
  for (int i = 0; i < this->token_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->token_id(i), output);
  }

  // repeated int32 token_count = 3;
  for (int i = 0; i < this->token_count_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->token_count(i), output);
  }

  // repeated int32 token_offset = 4;
  for (int i = 0; i < this->token_offset_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->token_offset(i), output);
  }

  // optional string string_value = 5;
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->string_value().data(), this->string_value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->string_value(), output);
  }

  // optional int64 int_value = 6;
  if (has_int_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->int_value(), output);
  }

  // optional double double_value = 7;
  if (has_double_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->double_value(), output);
  }

  // optional string date_value = 8;
  if (has_date_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->date_value().data(), this->date_value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->date_value(), output);
  }

  // repeated string string_array = 16;
  for (int i = 0; i < this->string_array_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->string_array(i).data(), this->string_array(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      16, this->string_array(i), output);
  }

  // repeated int64 int_array = 17;
  for (int i = 0; i < this->int_array_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      17, this->int_array(i), output);
  }

  // repeated double double_array = 18;
  for (int i = 0; i < this->double_array_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      18, this->double_array(i), output);
  }

  // repeated string date_array = 19;
  for (int i = 0; i < this->date_array_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->date_array(i).data(), this->date_array(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      19, this->date_array(i), output);
  }

  // repeated float token_weight = 20;
  for (int i = 0; i < this->token_weight_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      20, this->token_weight(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Field_v07::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string name = 1 [default = "@body"];
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated int32 token_id = 2;
  for (int i = 0; i < this->token_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->token_id(i), target);
  }

  // repeated int32 token_count = 3;
  for (int i = 0; i < this->token_count_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->token_count(i), target);
  }

  // repeated int32 token_offset = 4;
  for (int i = 0; i < this->token_offset_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->token_offset(i), target);
  }

  // optional string string_value = 5;
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->string_value().data(), this->string_value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->string_value(), target);
  }

  // optional int64 int_value = 6;
  if (has_int_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->int_value(), target);
  }

  // optional double double_value = 7;
  if (has_double_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->double_value(), target);
  }

  // optional string date_value = 8;
  if (has_date_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->date_value().data(), this->date_value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->date_value(), target);
  }

  // repeated string string_array = 16;
  for (int i = 0; i < this->string_array_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->string_array(i).data(), this->string_array(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(16, this->string_array(i), target);
  }

  // repeated int64 int_array = 17;
  for (int i = 0; i < this->int_array_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(17, this->int_array(i), target);
  }

  // repeated double double_array = 18;
  for (int i = 0; i < this->double_array_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(18, this->double_array(i), target);
  }

  // repeated string date_array = 19;
  for (int i = 0; i < this->date_array_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->date_array(i).data(), this->date_array(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(19, this->date_array(i), target);
  }

  // repeated float token_weight = 20;
  for (int i = 0; i < this->token_weight_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatToArray(20, this->token_weight(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Field_v07::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1 [default = "@body"];
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string string_value = 5;
    if (has_string_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string_value());
    }

    // optional int64 int_value = 6;
    if (has_int_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->int_value());
    }

    // optional double double_value = 7;
    if (has_double_value()) {
      total_size += 1 + 8;
    }

    // optional string date_value = 8;
    if (has_date_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->date_value());
    }

  }
  // repeated int32 token_id = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->token_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->token_id(i));
    }
    total_size += 1 * this->token_id_size() + data_size;
  }

  // repeated int32 token_count = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->token_count_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->token_count(i));
    }
    total_size += 1 * this->token_count_size() + data_size;
  }

  // repeated int32 token_offset = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->token_offset_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->token_offset(i));
    }
    total_size += 1 * this->token_offset_size() + data_size;
  }

  // repeated string string_array = 16;
  total_size += 2 * this->string_array_size();
  for (int i = 0; i < this->string_array_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->string_array(i));
  }

  // repeated int64 int_array = 17;
  {
    int data_size = 0;
    for (int i = 0; i < this->int_array_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->int_array(i));
    }
    total_size += 2 * this->int_array_size() + data_size;
  }

  // repeated double double_array = 18;
  {
    int data_size = 0;
    data_size = 8 * this->double_array_size();
    total_size += 2 * this->double_array_size() + data_size;
  }

  // repeated string date_array = 19;
  total_size += 2 * this->date_array_size();
  for (int i = 0; i < this->date_array_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->date_array(i));
  }

  // repeated float token_weight = 20;
  {
    int data_size = 0;
    data_size = 4 * this->token_weight_size();
    total_size += 2 * this->token_weight_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Field_v07::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Field_v07* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Field_v07*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Field_v07::MergeFrom(const Field_v07& from) {
  GOOGLE_CHECK_NE(&from, this);
  token_id_.MergeFrom(from.token_id_);
  token_count_.MergeFrom(from.token_count_);
  token_offset_.MergeFrom(from.token_offset_);
  string_array_.MergeFrom(from.string_array_);
  int_array_.MergeFrom(from.int_array_);
  double_array_.MergeFrom(from.double_array_);
  date_array_.MergeFrom(from.date_array_);
  token_weight_.MergeFrom(from.token_weight_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_string_value()) {
      set_string_value(from.string_value());
    }
    if (from.has_int_value()) {
      set_int_value(from.int_value());
    }
    if (from.has_double_value()) {
      set_double_value(from.double_value());
    }
    if (from.has_date_value()) {
      set_date_value(from.date_value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Field_v07::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Field_v07::CopyFrom(const Field_v07& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Field_v07::IsInitialized() const {

  return true;
}

void Field_v07::Swap(Field_v07* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    token_id_.Swap(&other->token_id_);
    token_count_.Swap(&other->token_count_);
    token_offset_.Swap(&other->token_offset_);
    std::swap(string_value_, other->string_value_);
    std::swap(int_value_, other->int_value_);
    std::swap(double_value_, other->double_value_);
    std::swap(date_value_, other->date_value_);
    string_array_.Swap(&other->string_array_);
    int_array_.Swap(&other->int_array_);
    double_array_.Swap(&other->double_array_);
    date_array_.Swap(&other->date_array_);
    token_weight_.Swap(&other->token_weight_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Field_v07::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Field_v07_descriptor_;
  metadata.reflection = Field_v07_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Batch_v07::kTokenFieldNumber;
const int Batch_v07::kClassIdFieldNumber;
const int Batch_v07::kItemFieldNumber;
const int Batch_v07::kDescriptionFieldNumber;
const int Batch_v07::kIdFieldNumber;
#endif  // !_MSC_VER

Batch_v07::Batch_v07()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Batch_v07::InitAsDefaultInstance() {
}

Batch_v07::Batch_v07(const Batch_v07& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Batch_v07::SharedCtor() {
  _cached_size_ = 0;
  description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyString());
  id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyString());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Batch_v07::~Batch_v07() {
  SharedDtor();
}

void Batch_v07::SharedDtor() {
  if (description_ != &::google::protobuf::internal::GetEmptyString()) {
    delete description_;
  }
  if (id_ != &::google::protobuf::internal::GetEmptyString()) {
    delete id_;
  }
  if (this != default_instance_) {
  }
}

void Batch_v07::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Batch_v07::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Batch_v07_descriptor_;
}

const Batch_v07& Batch_v07::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_artm_2fcore_2finternals_2eproto();
  return *default_instance_;
}

Batch_v07* Batch_v07::default_instance_ = NULL;

Batch_v07* Batch_v07::New() const {
  return new Batch_v07;
}

void Batch_v07::Clear() {
  if (_has_bits_[3 / 32] & (0xffu << (3 % 32))) {
    if (has_description()) {
      if (description_ != &::google::protobuf::internal::GetEmptyString()) {
        description_->clear();
      }
    }
    if (has_id()) {
      if (id_ != &::google::protobuf::internal::GetEmptyString()) {
        id_->clear();
      }
    }
  }
  token_.Clear();
  class_id_.Clear();
  item_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Batch_v07::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string token = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_token()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->token(this->token_size() - 1).data(),
            this->token(this->token_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_token;
        if (input->ExpectTag(18)) goto parse_class_id;
        break;
      }

      // repeated string class_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_class_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_class_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->class_id(this->class_id_size() - 1).data(),
            this->class_id(this->class_id_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_class_id;
        if (input->ExpectTag(26)) goto parse_item;
        break;
      }

      // repeated .artm.core.Item_v07 item = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_item;
        if (input->ExpectTag(34)) goto parse_description;
        break;
      }

      // optional string description = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_description:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_id;
        break;
      }

      // optional string id = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Batch_v07::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated string token = 1;
  for (int i = 0; i < this->token_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->token(i).data(), this->token(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->token(i), output);
  }

  // repeated string class_id = 2;
  for (int i = 0; i < this->class_id_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->class_id(i).data(), this->class_id(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->class_id(i), output);
  }

  // repeated .artm.core.Item_v07 item = 3;
  for (int i = 0; i < this->item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->item(i), output);
  }

  // optional string description = 4;
  if (has_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->description(), output);
  }

  // optional string id = 5;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Batch_v07::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated string token = 1;
  for (int i = 0; i < this->token_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->token(i).data(), this->token(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->token(i), target);
  }

  // repeated string class_id = 2;
  for (int i = 0; i < this->class_id_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->class_id(i).data(), this->class_id(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->class_id(i), target);
  }

  // repeated .artm.core.Item_v07 item = 3;
  for (int i = 0; i < this->item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->item(i), target);
  }

  // optional string description = 4;
  if (has_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->description(), target);
  }

  // optional string id = 5;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Batch_v07::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[3 / 32] & (0xffu << (3 % 32))) {
    // optional string description = 4;
    if (has_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->description());
    }

    // optional string id = 5;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

  }
  // repeated string token = 1;
  total_size += 1 * this->token_size();
  for (int i = 0; i < this->token_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->token(i));
  }

  // repeated string class_id = 2;
  total_size += 1 * this->class_id_size();
  for (int i = 0; i < this->class_id_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->class_id(i));
  }

  // repeated .artm.core.Item_v07 item = 3;
  total_size += 1 * this->item_size();
  for (int i = 0; i < this->item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Batch_v07::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Batch_v07* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Batch_v07*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Batch_v07::MergeFrom(const Batch_v07& from) {
  GOOGLE_CHECK_NE(&from, this);
  token_.MergeFrom(from.token_);
  class_id_.MergeFrom(from.class_id_);
  item_.MergeFrom(from.item_);
  if (from._has_bits_[3 / 32] & (0xffu << (3 % 32))) {
    if (from.has_description()) {
      set_description(from.description());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Batch_v07::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Batch_v07::CopyFrom(const Batch_v07& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Batch_v07::IsInitialized() const {

  return true;
}

void Batch_v07::Swap(Batch_v07* other) {
  if (other != this) {
    token_.Swap(&other->token_);
    class_id_.Swap(&other->class_id_);
    item_.Swap(&other->item_);
    std::swap(description_, other->description_);
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Batch_v07::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Batch_v07_descriptor_;
  metadata.reflection = Batch_v07_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace core
}  // namespace artm

// @@protoc_insertion_point(global_scope)
