language: python

matrix:
  include:
    # perform a linux build
    # cibuildwheel for manylinux
    - os: linux
      dist: trusty
      sudo: required
      env:
        - PYTHON_CONFIGURE_OPTS="--enable-unicode=ucs4 --with-wide-unicode"
        - CIBW_MANYLINUX_X86_64_IMAGE="manylinux1"
        - CIBW_MANYLINUX_I686_IMAGE="manylinux1"
      language: python
      python:
          - 3.5
          - 3.6
          - 3.7
          - 3.8
      services: docker
    # and a mac build
    - os: osx
      language: shell
    # and a windows build
    - os: windows
      language: shell
      before_install:
        - choco install python --version 3.8.0
        - export PATH="/c/Python38:/c/Python38/Scripts:$PATH"
        # make sure it's on PATH as 'python3'
        - ln -s /c/Python38/python.exe /c/Python38/python3.exe


install:
 - python3 -m pip install cibuildwheel==1.3.0

 - pip install -U pip && pip install virtualenv
 - if [[ $TRAVIS_OS_NAME == "osx" ]]; then python -m ensurepip && virtualenv /tmp/venv && source /tmp/venv/bin/activate ; fi

script:
 - if [[ -z $CIBW_BEFORE_BUILD && $TRAVIS_OS_NAME == "osx" ]]; then DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:staging/libs py.test -v --timeout 20 --ignore=tmp-build --import-mode append ; fi
 - if [[ -z $CIBW_BEFORE_BUILD && $TRAVIS_OS_NAME == "linux" ]]; then LD_LIBRARY_PATH=$LD_LIBRARY_PATH:staging/libs py.test -v --timeout 20 --ignore=tmp-build --import-mode append ; fi
